plugins {
    id 'com.github.ben-manes.versions' version '0.20.0'
    id 'java'
    id 'eclipse'
    id 'idea'
}

repositories {
    mavenCentral()
}

dependencies {
    // JUnit 5
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${junitVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"

    // Selenide 5
    testCompile "com.codeborne:selenide:${selenideVersion}"

    // Logging of 3-rd party libraries
    testImplementation "org.slf4j:jul-to-slf4j:${slf4jVersion}"
    testImplementation "ch.qos.logback:logback-classic:${logbackVersion}"
}

test {
    // JUnit 5
    useJUnitPlatform()
}

tasks.withType(Test) {
    // for using properties from gradle.properties
    systemProperties = System.properties

    // verbose logging in console
    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "full"
        }
    }

    // start tests every time, even when code not changed
    outputs.upToDateWhen { false }
}
